# generated by `lor framework`# user www www;
pid tmp/dev-nginx.pid;

# This number should be at maxium the number of CPU on the server
worker_processes 4;


events {
    # Number of connections per worker
    worker_connections 4096;
}

http {
    sendfile on;
    include ./mime.types;

    lua_package_path "./app/?.lua;./?.lua;/usr/local/lor/?.lua;;;;";
    lua_code_cache on;

log_format json_log escape=json '{"realip":"$remote_addr","@timestamp":"$time_iso8601","host":"$http_host","request":"$request","req_body":"$request_body","status":"$status","size":$body_bytes_sent,"ua":"$http_user_agent","cookie":"$http_cookie","req_time":"$request_time","uri":"$uri","referer":"$http_referer","xff":"$http_x_forwarded_for","ups_status":"$upstream_status","ups_addr":"$upstream_addr","ups_time":"$upstream_response_time"}';

    client_body_temp_path  /tmp/nginx/client_temp 3 2;
    client_max_body_size 500k;
    client_body_buffer_size 500k;
    server {
        # List port
        listen 8888;

        # Access log
        access_log logs/dev-access.log json_log;

        # Error log
        error_log logs/dev-error.log;

        # this variable is for view renderï¼ˆlua-resty-template)
        set $template_root '';

        location /static {
            alias ./app/static; #app/static;
        }

        # lor runtime
        location / {
            content_by_lua_file ./app/main.lua;
        }
    }
}
